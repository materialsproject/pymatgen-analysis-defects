name: testing

on:
  push:
    branches:
      - main

    tags:
      - 'v*'

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[strict]
          pip install -e .[dev]
          pre-commit install


      - name: Lint
        run: |
          pre-commit run --all-files --show-diff-on-failure

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8, 3.9 ]

    env:
      PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: actions/setup-python@v2.2.2
      with:
        python-version:  ${{ matrix.python-version }}

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[strict]
        pip install -e .[tests]

    - name: Test
      run: pytest --cov=pymatgen --cov-report=xml

    - uses: codecov/codecov-action@v1
      if: matrix.python-version == 3.8
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml


  docs:
    runs-on: ubuntu-latest

    env:
      PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Install pandoc
        run: sudo apt-get install pandoc

      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -e .[strict]
          pip install -e .[docs]
      - name: Build
        run: sphinx-build docs/source docs_build

      - name: Test Jupyter Notebooks
        run: |
          pytest --nbmake --nbmake-kernel=python3 tutorials

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./docs_build
